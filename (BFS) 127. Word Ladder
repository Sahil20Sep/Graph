class Solution {
public:
    int ladderLength(string s, string t, vector<string>& v) {
        set<string> ms;
        int n = v.size();
        for(int i = 0; i < n; i++){
            ms.insert(v[i]);
        }
        if(ms.find(t) == ms.end() || s.size() != t.size()){
            return 0;
        }
        queue<pair<string, int>> Q;
        Q.push({s, 1});
        while(!Q.empty()){
            auto f = Q.front();
            string a = f.first;
            int b = f.second;
            Q.pop();
            if(a == t){
                return b;
            }
            for(int i = 0; i < a.size(); i++){
                string temp = a;
                for(int j = 0; j < 26; j++){
                    temp[i] = char('a' + j);
                    if(ms.find(temp) != ms.end()){
                        ms.erase(temp);
                        Q.push({temp, b + 1});
                    }
                }
            }
        }
        return 0;
    }
};
